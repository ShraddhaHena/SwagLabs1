package test;

import org.testng.ITestResult; 
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Listeners;
import org.testng.annotations.Test;
import org.testng.internal.TestResult;
import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;

import utility.ReportsUserdefine;
@Listeners(utility.Listeners.class)
public class SampleCodeExplanation {
	ExtentReports reports;
	ExtentTest test; 
	
	@BeforeTest
	public void configureReports() {
		//reports = new ExtentReports();//dta collect
		//ExtentSparkReporter sparkReporter = new ExtentSparkReporter("extentreports.html");
		//reports.attachReporter(sparkReporter);
		//reports.setSystemInfo("CreatedBy", "Shraddha");
		//reports.setSystemInfo("TestSuite", "Regression"); // all these 5 lines are declared in userdefine method in class ExtentReports we just have to call CreateExtentReport with its class name .
		 reports= ReportsUserdefine.CreateExtentReport();
		 
		
	}
	@Test
    public void test1() {
	  test = reports.createTest("test1");
  	  System.out.println("Test1");
    }
    
    @Test(dependsOnMethods="test3")
    public void test2() 
    {
  	  test = reports.createTest("test2");
  	  System.out.println("Test2");
    }
    
    @Test(timeOut=1000)
    public void test3() throws InterruptedException
    { Thread.sleep(2000);
	  test = reports.createTest("test3");

  	  System.out.println("Test3");
    }
    @AfterMethod
    public void publishResult(ITestResult result)
    {    
    	if (result.getStatus()==ITestResult.SUCCESS)
    
    	{
    		test.log(Status.PASS,result.getName());
    	}
    	else if(result.getStatus()==ITestResult.FAILURE)
    	{
    		test.log(Status.FAIL,result.getName());
    	}
    	else
    	{
    		test.log(Status.SKIP, result.getName());
    	}
    }
    @AfterTest
    public void createReport()
    {
    	reports.flush();
    }
    
    
    
    
}
